
USE [DB_APR21_WEEKEND];

CREATE DATABASE db_SQLCaseStudies

USE [db_SQLCaseStudies];

--Q1 TOTAL NO. OF ROWS IN EACH TABLE

SELECT * FROM CUSTOMER --(HAS 5647 ROWS)

SELECT * FROM PROD_CAT_INFO -- (HAS 23 ROWS)

SELECT * FROM TRANSACTIONS --( HAS 23053 ROWS)

SELECT * FROM CUSTOMER
----------------------------------------------------------------------------------------------------------------------------------------------------
--Q2 TOTAL NO. OF TRANSACTIONS THAT HAVE A RETURN 

SELECT 
COUNT(QTY) AS NO_RETURN_TRANS
FROM 
TRANSACTIONS
WHERE QTY < 0

--2177 TRANSACTIONS HAVE A RETURN

---------------------------------------------------------------------------------------------------------------------------------------------------

--Q3 PLEASE CONVERT THE DATE VARIABLES  INTO VALID DATE FORMATS BEFORE PROCEEDING


SELECT 
DOB,
TRAN_DATE, 
CONVERT( DATE, TRAN_DATE, 103) AS FORMATTED_TRANS_DATE,
CONVERT( DATE, DOB, 103) AS DATE_OF_BIRTH
FROM 
CUSTOMER A
LEFT JOIN TRANSACTIONS B ON A.CUSTOMER_ID=B.CUST_ID 

----------------------------------------------------------------------------------------------------------------------------------------------------
--Q4 WHAT IS THE TIME RANGE OF TRANSACTION DATA AVAILABLE FOR ANALYSIS? SHOW THE OUTPUT IN NO. OF DAYS, MONTHS AND YEARS IN DIFFERENT COLUMNS


SELECT 
DATEDIFF(DAY, MIN(TRAN_DATE), MAX(TRAN_DATE)) AS DAY_TIME,
DATEDIFF(MONTH, MIN(TRAN_DATE), MAX(TRAN_DATE)) AS MONTH_TIME,
DATEDIFF(YEAR, MIN(TRAN_DATE), MAX(TRAN_DATE)) AS YEAR_TIME
FROM
TRANSACTIONS

----------------------------------------------------------------------------------------------------------------------------------------------------

--Q5 WHICH PRODUCT CATEGORY DOES THE SUB-CATEGORY "DIY" BELONG TO?

SELECT 
*
FROM PROD_CAT_INFO
WHERE PROD_SUBCAT='DIY' 

-- FROM THIS QUERY OUTPUT, IT IS CLEAR THAT THE SUB-CATEGORY "DIY" BELONGS TO THE PRODUCT CATEGORY OF BOOKS

----------------------------------------------------------------------------------------------------------------------------------------------------
--DATA ANALYSIS

--Q1. WHICH CHANNEL IS MOST FREQUENTLY USED FOR TRANSACTIONS?

SELECT
STORE_TYPE AS CHANNEL,
COUNT(STORE_TYPE) AS CNT_OF_CHANNEL
FROM 
TRANSACTIONS
GROUP BY
STORE_TYPE

--E-SHOP IS THE MOST FREQUENTLY USED CHANNEL FOR TRANSACTIONS

----------------------------------------------------------------------------------------------------------------------------------------------------
--Q2. WHAT IS THE COUNT OF MALE AND FEMALE CUSTOMERS IN THE DATABASE?

SELECT 
GENDER,
COUNT(GENDER) AS TOT_M_F
FROM
CUSTOMER
WHERE GENDER IN ('M', 'F')
GROUP BY
GENDER

--TOTAL NO. OF MALES=2892 AND TOTAL NO. OF FEMALES=2752

----------------------------------------------------------------------------------------------------------------------------------------------------

--Q3. FROM WHICH CITY DO WE HAVE THE MAXIMUM NO. OF CUSTOMERS AND HOW MANY?

SELECT
COUNT(CUSTOMER_ID) AS TOTAL_CUSTOMERS,
CITY_CODE
FROM 
CUSTOMER
GROUP BY
city_code
ORDER BY
TOTAL_CUSTOMERS DESC

--WE HAVE A MAXIMUM OF 595 CUSTOMERS IN CITY WITH CODE=3

----------------------------------------------------------------------------------------------------------------------------------------------------
--Q4. HOW MANY SUB-CATEGORIES ARE THERE	UNDER THE BOOKS CATEGORY?

SELECT
COUNT(PROD_SUBCAT) AS TOT_SUBCATEGORIES,
PROD_CAT
FROM 
PROD_CAT_INFO
WHERE PROD_CAT='BOOKS'
GROUP BY
PROD_CAT

-- THERE ARE 6 SUB-CATEGORIES UNDER BOOKS
----------------------------------------------------------------------------------------------------------------------------------------------------

--Q5. WHAT IS THE MAXIMUM NO. OF PRODUCTS EVER ORDERED?

SELECT
TRANSACTION_ID,
MAX(QTY) AS MAX_PRODUCTS_ORDERED
FROM
TRANSACTIONS
WHERE QTY>0
GROUP BY
TRANSACTION_ID
ORDER BY
MAX_PRODUCTS_ORDERED DESC


--MAXIMUM NO. OF PRODUCTS EVER ORDERED ARE 5
----------------------------------------------------------------------------------------------------------------------------------------------------

--Q6. WHAT IS THE NET TOTAL REVENUE GENERATED IN CATEGORIES ELECTRONICS AND BOOKS?

SELECT
SUM(CAST(TOTAL_AMT AS FLOAT)) AS TOTAL_REVENUE
FROM
PROD_CAT_INFO A
LEFT JOIN TRANSACTIONS B ON A.PROD_CAT_CODE=B.PROD_CAT_CODE AND A.prod_sub_cat_code=B.prod_subcat_code
WHERE PROD_CAT IN ('BOOKS', 'ELECTRONICS')

--THE NET REVENUE GENERATED IN BOOKS AND ELECTRONICS CATEGORY IS 23545157.67
----------------------------------------------------------------------------------------------------------------------------------------------------

--Q7. HOW MANY CUSTOMERS HAVE >10 TRANSACTIONS WITH US, EXCLUDING RETURNS?

SELECT DISTINCT 
CUST_ID AS CUSTOMERS,
COUNT(CUST_ID) AS NO_OF_CUS_TRANS
FROM TRANSACTIONS
WHERE CAST(QTY AS FLOAT) NOT IN ('-1', '-2', '-3', '-4', '-5')
GROUP BY 
CUST_ID
HAVING
COUNT(CUST_ID) >10 

--THERE ARE 6 CUSTOMERS THAT HAVE MORE THAN 10 TRANSACTIONS EXCLUDING RETURNS

-- TRIED DOING QTY <0, BUT NOT WORKING
----------------------------------------------------------------------------------------------------------------------------------------------------

--Q8. WHAT IS THE COMBINED REVENUE EARNED FROM ELECTRONICS AND CLOTHING CATEGORIES , FROM "FLAGSHIP STORES"?

SELECT
SUM(CAST(TOTAL_AMT AS FLOAT)) AS COMBINED_REVENUE
FROM 
PROD_CAT_INFO A
LEFT JOIN TRANSACTIONS B ON A.PROD_CAT_CODE=B.PROD_CAT_CODE AND A.prod_sub_cat_code=B.prod_subcat_code
WHERE PROD_CAT IN ('ELECTRONICS', 'CLOTHING') AND Store_type= 'FLAGSHIP STORE'


--COMBINED REVENUE IS 3409559.27

----------------------------------------------------------------------------------------------------------------------------------------------------
--Q9. WHAT IS THE TOTAL REVENUE GENERATED FROM "MALE CUSTOMERS" IN ELECTRONICS CATEGORY? OUTPUT SHOULD DISPLAY TOTAL REVENUE BY PROD SUB_CAT.

SELECT 
A.PROD_SUBCAT,
SUM(CAST(TOTAL_AMT AS FLOAT)) AS TOTAL_REVENUE
FROM 
PROD_CAT_INFO A
INNER JOIN TRANSACTIONS B ON A.PROD_CAT_CODE=B.PROD_CAT_CODE AND A.prod_sub_cat_code=B.prod_subcat_code
INNER JOIN CUSTOMER C ON B.CUST_ID=C.customer_Id
WHERE prod_subcat='M' AND PROD_CAT='ELECTRONICS'
GROUP BY
A.PROD_SUBCAT

--THERE ARE NO MALE CUSTOMERS WHO HAVE BOUGHT ELECTRONICS

----------------------------------------------------------------------------------------------------------------------------------------------------
--Q10. WHAT IS THE PERCENTAGE OF SALES AND RETURNS BY PRODUCT SUB-CATEGORY; DISPLAY ONLY TOP 5 SUB-CATEGORIES IN TERMS OF SALES

SELECT * FROM TRANSACTIONS
SELECT * FROM PROD_CAT_INFO

SELECT TOP 5
PROD_SUBCAT AS PRODUCT_SUBCATEGORY,
SUM(CAST(TOTAL_AMT AS FLOAT)) /(SELECT SUM(CAST(TOTAL_AMT AS FLOAT)) AS TOTAL_SALES FROM TRANSACTIONS) AS PERCENTAGE_SALES,
SUM(CAST(QTY AS FLOAT)) /(SELECT SUM(CAST(QTY AS FLOAT)) AS TOTAL_QUANTITY FROM TRANSACTIONS) AS PERCENTAGE_RETURN_QTY
FROM PROD_CAT_INFO A
LEFT JOIN TRANSACTIONS B ON A.PROD_CAT_CODE=B.PROD_CAT_CODE AND A.prod_sub_cat_code=B.prod_subcat_code
GROUP BY
PROD_SUBCAT


----------------------------------------------------------------------------------------------------------------------------------------------------
 
--Q11. FOR ALL CUSTOMERS AGED BETWEEN 25-35 YEARS FIND WHAT IS THE NET TOTAL REVENUE GENERATED BY THESE CONSUMERS IN THE LAST 30 DAYS OF
-- TRANSACTIONS FROM MAXIMUM TRANSACTION DATE AVAILABLE IN THE DATA?

SELECT * FROM TRANSACTIONS
SELECT * FROM CUSTOMER

SELECT 
SUM(CAST(TOTAL_AMT AS FLOAT)) AS TOTAL_REVENUE,
DATEADD(DAY,-30, (SELECT MAX(CONVERT( DATE, TRAN_DATE, 103)) FROM TRANSACTIONS)) AS DATE_ADD
FROM CUSTOMER 
LEFT JOIN TRANSACTIONS ON cust_id=customer_Id
WHERE
DATEDIFF(YEAR,CONVERT( DATE, TRAN_DATE, 103),getdate()) BETWEEN 25 AND 35


-- THE TOTAL REVENUE GENERATED BY CUSTOMERS BETWEEN 25 AND 35 YEARS IN THE LAST 30 DAYS OF TRANSACTIONS IS NULL
 
--------------------------------------------------------------------------------------------------------------------------------------------------

--Q12. WHICH PRODUCT CATEGORY HAS SEEN THE MAXIMUM VALUE OF RETURNS IN THE LAST 3 MONTHS OF TRANSACTIONS?

SELECT 
A.PROD_CAT AS PRODUCT_CATEGORY,
MAX(QTY) AS MAXIMUM_RETURNS
FROM
prod_cat_info A
LEFT JOIN TRANSACTIONS B ON A.PROD_CAT_CODE=B.PROD_CAT_CODE AND A.prod_sub_cat_code=B.prod_subcat_code
WHERE QTY < 0 AND CONVERT( DATE, TRAN_DATE, 103) > DATEADD (MONTH ,-3, (SELECT MAX(CONVERT( DATE, TRAN_DATE, 103)) FROM TRANSACTIONS))
GROUP BY
A.PROD_CAT


--HOME AND KITCHEN,CLOTHING,ELECTRONICS, BAGS,FOOTWEAR & BOOKS HAVE RETUNED MAXIMUM PRODUCTS IN THE LAST 3 MONTHS TRANSACTIONS


--Q13. WHICH STORE-TYPE SELLS THE MAXIMUM PRODUCTS ; BY VALUE OF SALES AMOUNT AND BY QUANTITY SOLD?

SELECT
STORE_TYPE,
SUM(CAST(total_amt AS FLOAT)) AS SALES_AMOUNT,
SUM(CAST(QTY AS FLOAT)) AS QUANTITY_SOLD
FROM TRANSACTIONS
WHERE QTY>0
GROUP BY
STORE_TYPE
ORDER BY
SUM(CAST(QTY AS FLOAT)) DESC



--e-SHOP SELLS THE MAXIMUM PRODUCTS BY SALES AMOUNT AND QUANTITY SOLD

----------------------------------------------------------------------------------------------------------------------------------------------------
--Q14. WHAT ARE THE CATEGORIES FOR WHICH AVERAGE REVENUE IS ABOVE THE OVERALL AVERAGE.

SELECT
A.PROD_CAT AS PRODUCT_CATEGORY,
AVG(CAST(TOTAL_AMT AS FLOAT)) AS PRODUCT_AVG_REVENUE
FROM 
prod_cat_info A 
LEFT JOIN TRANSACTIONS B ON A.PROD_CAT_CODE=B.PROD_CAT_CODE AND A.prod_sub_cat_code=B.prod_subcat_code
WHERE PROD_CAT IN ('CLOTHING','FOOTWEAR','ELECTRONICS', 'BAGS', 'BOOKS', 'HOME AND KITCHEN')
GROUP BY
PROD_CAT
HAVING
(
SELECT 
AVG(CAST(TOTAL_AMT AS FLOAT)) AS PRODUCT_AVG_REVENUE
FROM 
TRANSACTIONS) < AVG(CAST(TOTAL_AMT AS FLOAT))

--BOOKS, CLOTHING AND ELECTRONICS HAVE AN AVERAGE REVENUE MORE THAN THE OVERALL AVERAGE

------------------------------------------------------------------------------------------------------------------------------------------------
--BREAKING THE QUESTION

SELECT 
AVG(CAST(TOTAL_AMT AS FLOAT)) AS OVERALL_AVERAGE
FROM 
TRANSACTIONS

SELECT 
PROD_CAT_CODE AS PRODUCT_CATEGORY,
AVG(CAST(TOTAL_AMT AS FLOAT)) AS OVERALL_AVERAGE
FROM
TRANSACTIONS 
WHERE PROD_CAT_CODE IN ('1','2','3','4','5','6')
GROUP BY
PROD_CAT_CODE

--------------------------------------------------------------------------------------------------------------------------------------------------


--Q15. FIND THE AVERAGE AND TOTAL REVENUE BY EACH SUB-CATEGORY FOR THE CATEGORIES  WHICH ARE AMONG TOP 5 CATEGORIES IN TERMS OF QUANTITY SOLD

SELECT TOP 5
A.PROD_CAT AS PRODUCT_CATEGORY,
SUM(CAST (QTY AS INT)) AS QUANTITY_SOLD,
PROD_SUBCAT AS PRODUCT_SUBCATEGORY,
AVG(CAST(TOTAL_AMT AS FLOAT)) AS PRODUCT_AVG_REVENUE,
SUM(CAST(TOTAL_AMT AS FLOAT)) AS TOTAL_REVENUE
FROM 
prod_cat_info A 
LEFT JOIN TRANSACTIONS B ON A.PROD_CAT_CODE=B.PROD_CAT_CODE AND A.prod_sub_cat_code=B.prod_subcat_code
WHERE PROD_SUBCAT IN ('MENS','WOMENS','KIDS', 'MOBILES', 'COMPUTERS', 'PERSONAL APPLIANCES','CAMERAS','AUDIO AND VIDEO','ACADEMIC','NON-FICTION','DIY','COMICS','CHILDREN','FURNISHING', 'KITCHEN','BATH', 'TOOLS')
GROUP BY
PROD_CAT,PROD_SUBCAT
ORDER BY
SUM(CAST (QTY AS INT)) DESC

